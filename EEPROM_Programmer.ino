/*********************************
 James Solonika
 Component tester project - EEPROM programmer

 This tool will program the logic tables into
 the Arduino boards EEPROM memory for access
 during the main program

 Last updated 12/17/2015
 *********************************/
 #include <EEPROM.h>

const int AND_Table[256] = {
  0,0,0,1,0,0,0,1,0,0,0,1,2,2,2,3,
  0,0,0,1,0,0,0,1,0,0,0,1,2,2,2,3,
  0,0,0,1,0,0,0,1,0,0,0,1,2,2,2,3,
  4,4,4,5,4,4,4,5,4,4,4,5,6,6,6,7,
  0,0,0,1,0,0,0,1,0,0,0,1,2,2,2,3,
  0,0,0,1,0,0,0,1,0,0,0,1,2,2,2,3,
  0,0,0,1,0,0,0,1,0,0,0,1,2,2,2,3,
  4,4,4,5,4,4,4,5,4,4,4,5,6,6,6,7,
  0,0,0,1,0,0,0,1,0,0,0,1,2,2,2,3,
  0,0,0,1,0,0,0,1,0,0,0,1,2,2,2,3,
  0,0,0,1,0,0,0,1,0,0,0,1,2,2,2,3,
  4,4,4,5,4,4,4,5,4,4,4,5,6,6,6,7,
  8,8,8,9,8,8,8,9,8,8,8,9,10,10,10,11,
  8,8,8,9,8,8,8,9,8,8,8,9,10,10,10,11,
  8,8,8,9,8,8,8,9,8,8,8,9,10,10,10,11,
  12,12,12,13,12,12,12,13,12,12,12,13,14,14,14,15
};

const int OR_Table[256] = {
  0,1,1,1,2,3,3,3,2,3,3,3,2,3,3,3,
  4,5,5,5,6,7,7,7,6,7,7,7,6,7,7,7,
  4,5,5,5,6,7,7,7,6,7,7,7,6,7,7,7,
  4,5,5,5,6,7,7,7,6,7,7,7,6,7,7,7,
  8,9,9,9,10,11,11,11,10,11,11,11,10,11,11,11,
  12,13,13,13,14,15,15,15,14,15,15,15,14,15,15,15,
  12,13,13,13,14,15,15,15,14,15,15,15,14,15,15,15,
  12,13,13,13,14,15,15,15,14,15,15,15,14,15,15,15,
  8,9,9,9,10,11,11,11,10,11,11,11,10,11,11,11,
  12,13,13,13,14,15,15,15,14,15,15,15,14,15,15,15,
  12,13,13,13,14,15,15,15,14,15,15,15,14,15,15,15,
  12,13,13,13,14,15,15,15,14,15,15,15,14,15,15,15,
  8,9,9,9,10,11,11,11,10,11,11,11,10,11,11,11,
  12,13,13,13,14,15,15,15,14,15,15,15,14,15,15,15,
  12,13,13,13,14,15,15,15,14,15,15,15,14,15,15,15,
  12,13,13,13,14,15,15,15,14,15,15,15,14,15,15,15
};


  const int NAND_Table[256] = {
  15,15,15,14,15,15,15,14,15,15,15,14,13,13,13,12,
  15,15,15,14,15,15,15,14,15,15,15,14,13,13,13,12,
  15,15,15,14,15,15,15,14,15,15,15,14,13,13,13,12,
  11,11,11,10,11,11,11,10,11,11,11,10,9,9,9,8,
  15,15,15,14,15,15,15,14,15,15,15,14,13,13,13,12,
  15,15,15,14,15,15,15,14,15,15,15,14,13,13,13,12,
  15,15,15,14,15,15,15,14,15,15,15,14,13,13,13,12,
  11,11,11,10,11,11,11,10,11,11,11,10,9,9,9,8,
  15,15,15,14,15,15,15,14,15,15,15,14,13,13,13,12,
  15,15,15,14,15,15,15,14,15,15,15,14,13,13,13,12,
  15,15,15,14,15,15,15,14,15,15,15,14,13,13,13,12,
  11,11,11,10,11,11,11,10,11,11,11,10,9,9,9,8,
  7,7,7,6,7,7,7,6,7,7,7,6,5,5,5,4,
  7,7,7,6,7,7,7,6,7,7,7,6,5,5,5,4,
  7,7,7,6,7,7,7,6,7,7,7,6,5,5,5,4,
  3,3,3,2,3,3,3,2,3,3,3,2,1,1,1,0
};

const int NOR_Table[256] = {
  15,14,14,14,13,12,12,12,13,12,12,12,13,12,12,12,
  11,10,10,10,9,8,8,8,9,8,8,8,9,8,8,8,
  11,10,10,10,9,8,8,8,9,8,8,8,9,8,8,8,
  11,10,10,10,9,8,8,8,9,8,8,8,9,8,8,8,
  7,6,6,6,5,4,4,4,5,4,4,4,5,4,4,4,
  3,2,2,2,1,0,0,0,1,0,0,0,1,0,0,0,
  3,2,2,2,1,0,0,0,1,0,0,0,1,0,0,0,
  3,2,2,2,1,0,0,0,1,0,0,0,1,0,0,0,
  7,6,6,6,5,4,4,4,5,4,4,4,5,4,4,4,
  3,2,2,2,1,0,0,0,1,0,0,0,1,0,0,0,
  3,2,2,2,1,0,0,0,1,0,0,0,1,0,0,0,
  3,2,2,2,1,0,0,0,1,0,0,0,1,0,0,0,
  7,6,6,6,5,4,4,4,5,4,4,4,5,4,4,4,
  3,2,2,2,1,0,0,0,1,0,0,0,1,0,0,0,
  3,2,2,2,1,0,0,0,1,0,0,0,1,0,0,0,
  3,2,2,2,1,0,0,0,1,0,0,0,1,0,0,0,
};

const int XOR_Table[256] = {
  0,1,1,0,2,3,3,2,2,3,3,2,0,3,1,0,
  4,5,5,4,6,7,7,6,6,7,7,6,4,7,5,4,
  4,5,5,4,6,7,7,6,6,7,7,6,4,7,5,4,
  0,1,1,0,2,3,3,2,2,3,3,2,0,3,1,0,
  8,9,9,8,10,11,11,10,10,11,11,10,8,11,9,8,
  12,13,13,12,14,15,15,14,14,15,15,14,12,15,13,12,
  12,13,13,12,14,15,15,14,14,15,15,14,12,15,13,12,
  8,9,9,8,10,11,11,10,10,11,11,10,8,11,9,8,
  8,9,9,8,10,11,11,10,10,11,11,10,8,11,9,8,
  12,13,13,12,14,15,15,14,14,15,15,14,12,15,13,12,
  12,13,13,12,14,15,15,14,14,15,15,14,12,15,13,12,
  8,9,9,8,10,11,11,10,10,11,11,10,8,11,9,8,
  0,1,1,0,2,3,3,2,2,3,3,2,0,3,1,0,
  4,5,5,4,6,7,7,6,6,7,7,6,4,7,5,4,
  4,5,5,4,6,7,7,6,6,7,7,6,4,7,5,4,
  0,1,1,0,2,3,3,2,2,3,3,2,0,3,1,0
};

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  Serial.print('\n');
  Serial.print('\n');
  Serial.print('\n');
  
  for (int i = 0; i < 256; i++)
   {
 
     EEPROM.write(i, AND_Table[i]);
     
     Serial.print(i);
     Serial.print("\t");
     Serial.print(AND_Table[i]);
     Serial.print("-");
     Serial.print(EEPROM.read(i));
     
     EEPROM.write(i + 256, OR_Table[i]);
     
     Serial.print("-");
     Serial.print(OR_Table[i]);
     Serial.print("-");
     Serial.print(EEPROM.read(i+256));

     EEPROM.write(i + 256 + 256, NAND_Table[i]);
     
     Serial.print("-");
     Serial.print(NAND_Table[i]);
     Serial.print("-");
     Serial.print(EEPROM.read(i+256+256));

    EEPROM.write(i + 256 + 256 + 256, NOR_Table[i]);
     
     Serial.print("-");
     Serial.print(NOR_Table[i]);
     Serial.print("-");
     Serial.print(EEPROM.read(i+256+256+256));

     EEPROM.write(i + 256 + 256 + 256 + 256, XOR_Table[i]);
     
     Serial.print("-");
     Serial.print(XOR_Table[i]);
     Serial.print("-");
     Serial.print(EEPROM.read(i+256+256+256+256));
     Serial.print('\n');
   }

}

void loop() {
  // put your main code here, to run repeatedly:

}
